///////////////////////////////////////////
// Fichier de déclaration des globales
///////////////////////////////////////////

global _totallife=0, _life=1, _psnlife=2,_psnTurn=3, _psnTotal=4, _effects=5, _alterateStr=6, _alterateMgc=7, _alterateTP=8, _alterateMP=9, _str=10, _mgc=11, _wsd=12, _rst=13, _agi=14, _snc=15, _tp=16, _mp=17, _relShield=18, _absShield=19, _dmgReturn=20, _scoreLibe=21, _nbBulbs=22, _bulbs=23, _map=24, _debuff=25, _shackleStr=26, _shackleMgc=27, _shackleTP=28, _shackleMP=29, _danger=30, _mpused=31, _item=32, _items=33, _minItemCost=34, _damage=35, _antidote=36, _dmg=37, _psn=38, _heal=39, _stackOfResult=40, _stackOfDeath=41, _score=42, _from=43, _to=44, _targets=45, _sCell=46, _stack=47, _actions=48, _dead=49, _lifeMissing=50;


global __DEBUG_ON = true;
global __DDD_ON = false;
global ___ = "-";
global _OPERATION_MAP_DANGER = 2000000; // ratio + mp
if(getTurn()==3) _OPERATION_MAP_DANGER = 1500000;
if(getTurn()==5) _OPERATION_MAP_DANGER = 1000000;
global _OPERATION_BULB = 400000;

global _MAX_ITEM_ID = 150; //110 @2016
global _MAX_CELL = 612;
global _MIN_INT = -2147483648, _MAX_INT = 2147483647;
global _SCORE_KILL_DMG = 2000;
global _SCORE_KILL_PSN = 500;
global _SCORE_DEATH = 10000;

global _RATIO_RISK_DEATH = 0.7; // un danger > à 70% de ma vie total est risky
global _RATIO_IGNORE_DANGER = 0.25;
global _RATIO_DANGER = 1;
global _RATIO_MP_USED = 5;

global _SCORE_MP = 40;
global _SCORE_TP = 40;
global _SCORE_REL_SHIELD = 4;

global _DECODING_STUFF, _ENCODING_STUFF = [];
_DECODING_STUFF = @(getWeapons()+getChips());
for(var id : var item in _DECODING_STUFF) _ENCODING_STUFF[item] = id;

// ========================
// INFOS LEEKS
// ========================

// ID du joueur leek.
global _SELF = getLeek();
global _NEAREST_ENEMY_LEEK;
global _GRAVITY_CELLS = [];
global _GRAVITY_COEFS = [];
global _SHOULD_KEEP_MAINWEAP_INHAND = false;
global _CANT_HEAL = getWisdom()<=0 && _ENCODING_STUFF[CHIP_HEALER_BULB]==null;
global _IS_TELEPORT = _ENCODING_STUFF[CHIP_TELEPORTATION]!=null;
global _IS_RESURECT = _ENCODING_STUFF[CHIP_RESURRECTION]!=null;
global _IS_SUMMONER = _ENCODING_STUFF[CHIP_LIGHTNING_BULB]!=null
				   || _ENCODING_STUFF[CHIP_FIRE_BULB]!=null
				   || _ENCODING_STUFF[CHIP_METALLIC_BULB]!=null
				   || _ENCODING_STUFF[CHIP_HEALER_BULB]!=null
				   || _ENCODING_STUFF[CHIP_ICED_BULB]!=null
				   || _ENCODING_STUFF[CHIP_ROCKY_BULB]!=null
				   || _ENCODING_STUFF[CHIP_PUNY_BULB]!=null;
global _IS_CAC; _IS_CAC = getWeapon()==null ? false : _ITEM_MAXRANGE[getWeapon()]==1;

// fonction
global getMainWeapon;

// les infos utilisés pour la prise de décision
global _COEF_DMG;
global _COEF_HEAL;
global _COEF_VACCIN;
global _COEF_MAXHP_BOOST;
global _COEF_ABSSHIELD;
global _COEF_RELSHIELD;
global _COEF_STR_BOOST;
global _COEF_AGI_BOOST;
global _COEF_WSD_BOOST;
global _COEF_RST_BOOST;
global _COEF_MP_BOOST;
global _COEF_TP_BOOST;
global _COEF_SHACKLE_TP;
global _COEF_SHACKLE_MP;
global _COEF_SHACKLE_STR;
global _COEF_SHACKLE_MGC;
global _COEF_LIBERATE;
global _COEF_RETURN_DMG;

global _RESU_TARGET;
global _RESU_SCORE;

global _STR_100;
global _STR_300;
global _SNC_400;

global _SCORE_ITEM = [];
global _MOY_COEF = [];

// tableau getAliveEnemies/allies
global _ALIVE_ALLIES;
global _ALIVE_ENEMIES;
global _ALIVE_ALLIES_LEEKS;
global _ALIVE_ALLIES_BULBS;
global _ALIVE_ENEMIES_LEEKS;
global _ALIVE_ENEMIES_BULBS;
global _ALIVE_ENEMIES_DANGER;
global _COUNT_PUNY;
global _COUNT_ROCKY;
global _COUNT_ICED;
global _COUNT_HEALER;
global _COUNT_METAL;
global _COUNT_FIRE;
global _COUNT_LIGHTNING;

// ========================
// INFOS MAP
// ========================

global reachableCells; //[cell:mp]
global map_danger; // [cell:dmg]
global map_leek_weap_danger; // [leek: [weap: [map_danger]]]

// actions !
global _action_SELFCELL = 1023;
global map_action_targets = [];
global self_action_array = []; // [chip:chip]
global map_fromC_items = []; // [cellFrom:[itemId]]
global map_from_item_actions = []; // [cellFrom:[itemId:[actions]]]


// pour baisser le coût de setMapActions();
global atkCellsPoint = [], atkCellsArea1 = [], atkCellsArea2 = [], atkCellsArea3 = [],
	   defCellsPoint = [], defCellsArea1 = [], defCellsArea2 = [], defCellsArea3 = [];
 // ["id":w, "from":fromCell, "to":toCell, "targets":targets]




// cache
global _INDEX_DANGER;
global _CACHE_DANGER = [];
global _CACHE_REACHABLE_DANGER = [];
global _CACHE_REACHABLE_SIZE = [];
global _CACHE_WEAPDMG = [];
global _CACHE_ITEM_FROMCELL_TARGETCELLS = [];

global _CACHE_SCORE_SAFECELL;
global _CACHE_SCORE_ACTION;
global _CACHE_CELLS_NO_TELEPORT;

// Contient les id des cells obstacle en clé, test cell libre avec _OBSTACLES[cell]==null
// init tour 1.
global _OBSTACLES = [];
global _CELLS_NO_OBSTACLES = [];
// Contient les informations sur les leeks, refresh à tous les tours en début de tour.
global _LEEKS = [];


// Contient les id des cells des leeks, sauf le leek qui joue.
// refresh au debug de chaque tour.
global _LEEKS_CELL;

// not used, utile pour getCellToUseWeapChipOnCell, pour avoir la plus proche en path
global _SELF_FULLMAP_PATH_DIST;
global _NEARE_FULLMAP_PATH_DIST;

// contient les AREA_CIRCLE_X de chaque cell non obstacle dans un array [cell1, cell2...]
// init tour 1.
global _areaCells1 = [];
global _areaCells1Obstacle = [];

global _areaCells2 = [];
global _areaCells3 = [];

// ========================
// INFOS STUFF
// ========================

// infos sur les armes/puces préstocker pour perf & cas spéciaux.
// init tour 1, les noms sont explicites.
global _ITEM_ISWEAP = [];
global _ITEM_MINRANGE = [];
global _ITEM_MAXRANGE = [];
global _ITEM_INLINE = [];
global _ITEM_NEEDLOS = [];
global _ITEM_COST = [];
global _ITEM_AREA = [];
global _ITEM_EFFECTS = [];
global _ITEM_HAVECD = [];

// ========================
// DEBUG
// ========================
global __debug_operation = 0;
global __count_func;
global __cumul_func;
global __laststart_func;


// ========================
// AUTRES
// ========================

// Constante pour différencier les bulbes.
global ENTITY_LEEK_ = 0;
global ENTITY_PUNY_BULB = 1;
global ENTITY_ROCKY_BULB = 2;
global ENTITY_ICED_BULB = 3;
global ENTITY_HEALER_BULB = 4;
global ENTITY_METALLIC_BULB = 5;
global ENTITY_FIRE_BULB = 6;
global ENTITY_LIGHTNING_BULB = 7;

// retourne si la puce à un effet positif pour la cible ou non.
// les cas spéciaux sont les summons (+resu) & les déplacements qui sont gérer autrement.
global _CHIP_ISPOSITIV = [
    CHIP_ACCELERATION:true,
    CHIP_ADRENALINE:true,
    CHIP_ANTIDOTE:true,
    CHIP_ARMOR:true,
    CHIP_ARMORING:true,
    CHIP_BALL_AND_CHAIN:false,
    CHIP_BANDAGE:true,
    CHIP_BARK:true,
    CHIP_BURNING:false,
    CHIP_CARAPACE:true,
    CHIP_COLLAR:true,
    CHIP_CURE:true,
    CHIP_DEVIL_STRIKE:false,
    CHIP_DOPING:true,
    CHIP_DRIP:true,
    CHIP_FEROCITY:true,
    CHIP_FERTILIZER:true,
    CHIP_FIRE_BULB:null,//specialCHIP
    CHIP_FLAME:false,
	CHIP_FLASH:false,
    CHIP_FORTRESS:true,
    CHIP_FRACTURE:false,
    CHIP_HEALER_BULB:null,//specialCHIP
    CHIP_HELMET:true,
    CHIP_ICE:false,
    CHIP_ICEBERG:false,
    CHIP_ICED_BULB:null,//specialCHIP
    CHIP_INVERSION:null,//specialCHIP
    CHIP_LEATHER_BOOTS:true,
    CHIP_LIBERATION:null,//chip chelou, gérer comme offensive pour le moment..
    CHIP_LIGHTNING:false,
    CHIP_LIGHTNING_BULB:null,//specialCHIP
    CHIP_LOAM:true,
    CHIP_METALLIC_BULB:null,//specialCHIP
    CHIP_METEORITE:false,
    CHIP_MIRROR:true,
    CHIP_MOTIVATION:true,
    CHIP_PEBBLE:false,
    CHIP_PLAGUE:false,
    CHIP_PROTEIN:true,
    CHIP_PUNY_BULB:null,//specialCHIP
    CHIP_RAGE:true,
    CHIP_RAMPART:true,
    CHIP_REFLEXES:true,
    CHIP_REGENERATION:true,
    CHIP_REMISSION:true,
    CHIP_RESURRECTION:null,//specialCHIP
    CHIP_ROCK:false,
    CHIP_ROCKFALL:false,
    CHIP_ROCKY_BULB:null,//specialCHIP
    CHIP_SEVEN_LEAGUE_BOOTS:true,
    CHIP_SHIELD:true,
    CHIP_SHOCK:false,
    CHIP_SLOW_DOWN:false,
    CHIP_SOLIDIFICATION:true,
    CHIP_SOPORIFIC:false,
    CHIP_SPARK:false,
    CHIP_STALACTITE:false,
    CHIP_STEROID:true,
    CHIP_STRETCHING:true,
    CHIP_TELEPORTATION:null,//specialCHIP
    CHIP_THORN:true,
    CHIP_TOXIN:false,
    CHIP_TRANQUILIZER:false,
    CHIP_VACCINE:true,
    CHIP_VENOM:false,
    CHIP_WALL:true,
    CHIP_WARM_UP:true,
    CHIP_WHIP:true,
    CHIP_WINGED_BOOTS:true
];

// true = onlybulb
// false = everyone
// null = onlyleek
global _CHIP_ISONLYBULB = [
    CHIP_ACCELERATION:true,
    CHIP_ADRENALINE:false,
    CHIP_ANTIDOTE:false,
    CHIP_ARMOR:false,
    CHIP_ARMORING:false,
    CHIP_BALL_AND_CHAIN:false,
    CHIP_BANDAGE:false,
    CHIP_BARK:true,
    CHIP_BURNING:true,
    CHIP_CARAPACE:true,
    CHIP_COLLAR:true,
    CHIP_CURE:false,
    CHIP_DEVIL_STRIKE:false,
    CHIP_DOPING:false,
    CHIP_DRIP:false,
    CHIP_FEROCITY:true,
    CHIP_FERTILIZER:true,
    CHIP_FIRE_BULB:false,//specialCHIP
    CHIP_FLAME:false,
	CHIP_FLASH:false,
    CHIP_FORTRESS:false,
    CHIP_FRACTURE:false,
    CHIP_HEALER_BULB:false,//specialCHIP
    CHIP_HELMET:false,
    CHIP_ICE:false,
    CHIP_ICEBERG:false,
    CHIP_ICED_BULB:false,//specialCHIP
    CHIP_INVERSION:false,//specialCHIP
    CHIP_LEATHER_BOOTS:false,
    CHIP_LIBERATION:false,//chip chelou, gérer comme offensive pour le moment..
    CHIP_LIGHTNING:false,
    CHIP_LIGHTNING_BULB:false,//specialCHIP
    CHIP_LOAM:true,
    CHIP_METALLIC_BULB:false,//specialCHIP
    CHIP_METEORITE:false,
    CHIP_MIRROR:false,
    CHIP_MOTIVATION:false,
    CHIP_PEBBLE:false,
    CHIP_PLAGUE:false,
    CHIP_PROTEIN:false,
    CHIP_PUNY_BULB:false,//specialCHIP
    CHIP_RAGE:null,
    CHIP_RAMPART:false,
    CHIP_REFLEXES:false,
    CHIP_REGENERATION:false, 
    CHIP_REMISSION:true,
    CHIP_RESURRECTION:false,//specialCHIP
    CHIP_ROCK:false,
    CHIP_ROCKFALL:false,
    CHIP_ROCKY_BULB:false,//specialCHIP
    CHIP_SEVEN_LEAGUE_BOOTS:null,
    CHIP_SHIELD:false,
    CHIP_SHOCK:false,
    CHIP_SLOW_DOWN:false,
    CHIP_SOLIDIFICATION:false,
    CHIP_SOPORIFIC:false,
    CHIP_SPARK:false,
    CHIP_STALACTITE:false,
    CHIP_STEROID:false,
    CHIP_STRETCHING:false,
    CHIP_TELEPORTATION:false,//specialCHIP
    CHIP_THORN:false,
    CHIP_TOXIN:false,
    CHIP_TRANQUILIZER:false,
    CHIP_VACCINE:false,
    CHIP_VENOM:false,
    CHIP_WALL:false,
    CHIP_WARM_UP:false,
    CHIP_WHIP:true,
    CHIP_WINGED_BOOTS:false
];

// contient en clés les chips qui ne sont pas traité par l'algo générique de génération des actions disponibles.
global _CHIP_ISSPECIAL = [
    CHIP_RESURRECTION: true, // considéré comme du summoning.
    CHIP_PUNY_BULB: true, // summoning
    CHIP_ROCKY_BULB: true, // summoning
    CHIP_ICED_BULB: true, // summoning
    CHIP_HEALER_BULB: true, // summoning
    CHIP_METALLIC_BULB: true, // summoning
    CHIP_FIRE_BULB: true, // summoning
    CHIP_LIGHTNING_BULB: true, // summoning
    CHIP_TELEPORTATION: true, // déplacement complexe, aucune idée
    CHIP_INVERSION:true // déplacement complexe, pareil...
];

// contient l'association entre l'id d'une puce/arme et sa constante sous forme de string
global _ITEM_CAN_ALTER_DANGER = [
    CHIP_ACCELERATION:false,
    CHIP_ADRENALINE:false,
    CHIP_ANTIDOTE:false,
    CHIP_ARMOR:true,
    CHIP_ARMORING:false,
    CHIP_BALL_AND_CHAIN:false,
    CHIP_BANDAGE:false,
    CHIP_BARK:false,
    CHIP_BURNING:false,
    CHIP_CARAPACE:false,
    CHIP_COLLAR:false,
    CHIP_CURE:false,
    CHIP_DEVIL_STRIKE:false,
    CHIP_DOPING:false,
    CHIP_DRIP:false,
    CHIP_FEROCITY:false,
    CHIP_FERTILIZER:false,
    CHIP_FIRE_BULB:false,
    CHIP_FLAME:false,
	CHIP_FLASH:false,
    CHIP_FORTRESS:true,
    CHIP_FRACTURE:true,
    CHIP_HEALER_BULB:false,
    CHIP_HELMET:true,
    CHIP_ICE:false,
    CHIP_ICEBERG:false,
    CHIP_ICED_BULB:false,
    CHIP_INVERSION:false,//?
    CHIP_LEATHER_BOOTS:false,
    CHIP_LIBERATION:true,
    CHIP_LIGHTNING:false,
    CHIP_LIGHTNING_BULB:false,
    CHIP_LOAM:false,
    CHIP_METALLIC_BULB:false,
    CHIP_METEORITE:false,
    CHIP_MIRROR:false,
    CHIP_MOTIVATION:false,
    CHIP_PEBBLE:false,
    CHIP_PLAGUE:false,
    CHIP_PROTEIN:false,
    CHIP_PUNY_BULB:false,
    CHIP_RAGE:false,
    CHIP_RAMPART:false,
    CHIP_REFLEXES:false,
    CHIP_REGENERATION:false,
    CHIP_REMISSION:false,
    CHIP_RESURRECTION:false,
    CHIP_ROCK:false,
    CHIP_ROCKFALL:false,
    CHIP_ROCKY_BULB:false,
    CHIP_SEVEN_LEAGUE_BOOTS:false,
    CHIP_SHIELD:true,
    CHIP_SHOCK:false,
    CHIP_SLOW_DOWN:false,//mp
    CHIP_SOLIDIFICATION:false,
    CHIP_SOPORIFIC:true,
    CHIP_SPARK:false,
    CHIP_STALACTITE:false,
    CHIP_STEROID:false,
    CHIP_STRETCHING:false,
    CHIP_TELEPORTATION:false,//?
    CHIP_THORN:false,
    CHIP_TOXIN:false,
    CHIP_TRANQUILIZER:true,
    CHIP_VACCINE:false,
    CHIP_VENOM:false,
    CHIP_WALL:true,
    CHIP_WARM_UP:false,
    CHIP_WHIP:false,
    CHIP_WINGED_BOOTS:false,
	WEAPON_AXE:false, 
	WEAPON_B_LASER:false,
	WEAPON_BROADSWORD:true,
	WEAPON_DESTROYER:true,
	WEAPON_DOUBLE_GUN:false,
	WEAPON_ELECTRISOR:false,
	WEAPON_FLAME_THROWER:false,
	WEAPON_GAZOR:false,
	WEAPON_GRENADE_LAUNCHER:false,
	WEAPON_KATANA:true,
	WEAPON_LASER:false,
	WEAPON_MACHINE_GUN:false,
	WEAPON_MAGNUM:false,
	WEAPON_M_LASER:false,
	WEAPON_PISTOL:false,
	WEAPON_SHOTGUN:false
];

// contient l'association entre l'id d'une puce/arme et sa constante sous forme de string
global _ITEMID_TOSTRING = [
    CHIP_ACCELERATION:"CHIP_ACCELERATION",
    CHIP_ADRENALINE:"CHIP_ADRENALINE",
    CHIP_ANTIDOTE:"CHIP_ANTIDOTE",
    CHIP_ARMOR:"CHIP_ARMOR",
    CHIP_ARMORING:"CHIP_ARMORING",
    CHIP_BALL_AND_CHAIN:"CHIP_BALL_AND_CHAIN",
    CHIP_BANDAGE:"CHIP_BANDAGE",
    CHIP_BARK:"CHIP_BARK",
    CHIP_BURNING:"CHIP_BURNING",
    CHIP_CARAPACE:"CHIP_CARAPACE",
    CHIP_COLLAR:"CHIP_COLLAR",
    CHIP_CURE:"CHIP_CURE",
    CHIP_DEVIL_STRIKE:"CHIP_DEVIL_STRIKE",
    CHIP_DOPING:"CHIP_DOPING",
    CHIP_DRIP:"CHIP_DRIP",
    CHIP_FEROCITY:"CHIP_FEROCITY",
    CHIP_FERTILIZER:"CHIP_FERTILIZER",
    CHIP_FIRE_BULB:"CHIP_FIRE_BULB",
    CHIP_FLAME:"CHIP_FLAME",
	CHIP_FLASH:"CHIP_FLASH",
    CHIP_FORTRESS:"CHIP_FORTRESS",
    CHIP_FRACTURE:"CHIP_FRACTURE",
    CHIP_HEALER_BULB:"CHIP_HEALER_BULB",
    CHIP_HELMET:"CHIP_HELMET",
    CHIP_ICE:"CHIP_ICE",
    CHIP_ICEBERG:"CHIP_ICEBERG",
    CHIP_ICED_BULB:"CHIP_ICED_BULB",
    CHIP_INVERSION:"CHIP_INVERSION",
    CHIP_LEATHER_BOOTS:"CHIP_LEATHER_BOOTS",
    CHIP_LIBERATION:"CHIP_LIBERATION",
    CHIP_LIGHTNING:"CHIP_LIGHTNING",
    CHIP_LIGHTNING_BULB:"CHIP_LIGHTNING_BULB",
    CHIP_LOAM:"CHIP_LOAM",
    CHIP_METALLIC_BULB:"CHIP_METALLIC_BULB",
    CHIP_METEORITE:"CHIP_METEORITE",
    CHIP_MIRROR:"CHIP_MIRROR",
    CHIP_MOTIVATION:"CHIP_MOTIVATION",
    CHIP_PEBBLE:"CHIP_PEBBLE",
    CHIP_PLAGUE:"CHIP_PLAGUE",
    CHIP_PROTEIN:"CHIP_PROTEIN",
    CHIP_PUNY_BULB:"CHIP_PUNY_BULB",
    CHIP_RAGE:"CHIP_RAGE",
    CHIP_RAMPART:"CHIP_RAMPART",
    CHIP_REFLEXES:"CHIP_REFLEXES",
    CHIP_REGENERATION:"CHIP_REGENERATION",
    CHIP_REMISSION:"CHIP_REMISSION",
    CHIP_RESURRECTION:"CHIP_RESURRECTION",
    CHIP_ROCK:"CHIP_ROCK",
    CHIP_ROCKFALL:"CHIP_ROCKFALL",
    CHIP_ROCKY_BULB:"CHIP_ROCKY_BULB",
    CHIP_SEVEN_LEAGUE_BOOTS:"CHIP_SEVEN_LEAGUE_BOOTS",
    CHIP_SHIELD:"CHIP_SHIELD",
    CHIP_SHOCK:"CHIP_SHOCK",
    CHIP_SLOW_DOWN:"CHIP_SLOW_DOWN",
    CHIP_SOLIDIFICATION:"CHIP_SOLIDIFICATION",
    CHIP_SOPORIFIC:"CHIP_SOPORIFIC",
    CHIP_SPARK:"CHIP_SPARK",
    CHIP_STALACTITE:"CHIP_STALACTITE",
    CHIP_STEROID:"CHIP_STEROID",
    CHIP_STRETCHING:"CHIP_STRETCHING",
    CHIP_TELEPORTATION:"CHIP_TELEPORTATION",
    CHIP_THORN:"CHIP_THORN",
    CHIP_TOXIN:"CHIP_TOXIN",
    CHIP_TRANQUILIZER:"CHIP_TRANQUILIZER",
    CHIP_VACCINE:"CHIP_VACCINE",
    CHIP_VENOM:"CHIP_VENOM",
    CHIP_WALL:"CHIP_WALL",
    CHIP_WARM_UP:"CHIP_WARM_UP",
    CHIP_WHIP:"CHIP_WHIP",
    CHIP_WINGED_BOOTS:"CHIP_WINGED_BOOTS",
	WEAPON_AXE:"WEAPON_AXE", 
	WEAPON_B_LASER:"WEAPON_B_LASER",
	WEAPON_BROADSWORD:"WEAPON_BROADSWORD",
	WEAPON_DESTROYER:"WEAPON_DESTROYER",
	WEAPON_DOUBLE_GUN:"WEAPON_DOUBLE_GUN",
	WEAPON_ELECTRISOR:"WEAPON_ELECTRISOR",
	WEAPON_FLAME_THROWER:"WEAPON_FLAME_THROWER",
	WEAPON_GAZOR:"WEAPON_GAZOR",
	WEAPON_GRENADE_LAUNCHER:"WEAPON_GRENADE_LAUNCHER",
	WEAPON_KATANA:"WEAPON_KATANA",
	WEAPON_LASER:"WEAPON_LASER",
	WEAPON_MACHINE_GUN:"WEAPON_MACHINE_GUN",
	WEAPON_MAGNUM:"WEAPON_MAGNUM",
	WEAPON_M_LASER:"WEAPON_M_LASER",
	WEAPON_PISTOL:"WEAPON_PISTOL",
	WEAPON_SHOTGUN:"WEAPON_SHOTGUN"
];


global _ITEM_PRIORITY = [
	CHIP_LIBERATION:0,//TOUJOURS lancer en premier.
    CHIP_REFLEXES:1,// puis les boosts agi qui donne des crits à tout le reste de l'action
	CHIP_STRETCHING:2,// dans cet ordre si on fait les 2, merci loutre pour tes intégrales !
	CHIP_WARM_UP:3,// crit des autres, pas important d'être au début mais bon...
    CHIP_RAGE:4,// puis TP
	CHIP_MOTIVATION:4,
	CHIP_WHIP:5,
    CHIP_ADRENALINE:5,
	CHIP_SEVEN_LEAGUE_BOOTS:6,//puis MP
	CHIP_ACCELERATION:6,
	CHIP_WINGED_BOOTS:7
	CHIP_LEATHER_BOOTS:7,
	CHIP_DOPING:8,//puis force (avant de taper donc.)
	CHIP_PROTEIN:9,
	CHIP_FEROCITY:10,
	CHIP_STEROID:10,
	CHIP_SOLIDIFICATION:11,// puis resist avant les armures
	CHIP_BARK:12,
	CHIP_COLLAR:13,// puis sagesse avant les heal (mm si pour le moment y'a pas d'autoheal..)
	CHIP_CARAPACE:14,// puis les armures avant les spell genre devilstrike
    CHIP_FORTRESS:14,
    CHIP_ARMOR:14,
	CHIP_RAMPART:14,
	CHIP_SHIELD:14,
	CHIP_WALL:14,
	CHIP_HELMET:14,
	CHIP_DEVIL_STRIKE:15,// puis les dégâts et autodégât avec devilstrike
	CHIP_BURNING:16,
	CHIP_METEORITE:16,
	CHIP_ICEBERG:16,
	CHIP_ROCKFALL:16,
	CHIP_LIGHTNING:16,
	CHIP_STALACTITE:16,
    CHIP_FLAME:16,
	CHIP_ROCK:16,
	CHIP_ICE:16,
	CHIP_SPARK:16,
    CHIP_PEBBLE:16,
	CHIP_SHOCK:16,
	WEAPON_AXE:17,// les weapon pareil, après les armures, le avant les heal dépends souvent
	WEAPON_B_LASER:17,// de la situation ducoup c'est chiant...
	WEAPON_BROADSWORD:17,
	WEAPON_DESTROYER:17,
	WEAPON_DOUBLE_GUN:17,
	WEAPON_ELECTRISOR:17,
	WEAPON_FLAME_THROWER:17,
	WEAPON_GAZOR:17,
	WEAPON_GRENADE_LAUNCHER:17,
	WEAPON_KATANA:17,
	WEAPON_LASER:17,
	WEAPON_MACHINE_GUN:17,
	WEAPON_MAGNUM:17,
	WEAPON_M_LASER:17,
	WEAPON_PISTOL:17,
	WEAPON_SHOTGUN:17,
	CHIP_SOPORIFIC:18,// puis entrave & poison AVANT antidote & heal.
    CHIP_BALL_AND_CHAIN:18,
	CHIP_TRANQUILIZER:18,
	CHIP_SLOW_DOWN:18,
	CHIP_FRACTURE:18,
    CHIP_PLAGUE:18,
    CHIP_TOXIN:18,
	CHIP_VENOM:18,
    CHIP_FERTILIZER:19,// puis heal après poison et dégât (j'avoue qu'en cas de blessure le heal pourrait être interessant avant de devilstrike... jsais pas comment gérer ça.)
	CHIP_REMISSION:19,
	CHIP_LOAM:19,
	CHIP_ARMORING:19,
	CHIP_REGENERATION:19,
	CHIP_VACCINE:19,
	CHIP_DRIP:19,
    CHIP_CURE:19,
    CHIP_BANDAGE:19,
	CHIP_MIRROR:20,// puis renvoie de dégât (faut bien les mettres qqpart...)
	CHIP_THORN:20,
    CHIP_ANTIDOTE:21,// puis antidote, toujours après avoir utiliser les poisons !
	// et le reste...
    CHIP_LIGHTNING_BULB:22,//specialCHIP    
    CHIP_FIRE_BULB:22,//specialCHIP
	CHIP_METALLIC_BULB:22,//specialCHIP
    CHIP_HEALER_BULB:22,//specialCHIP
    CHIP_ICED_BULB:22,//specialCHIP
	CHIP_ROCKY_BULB:22,//specialCHIP
	CHIP_PUNY_BULB:22,//specialCHIP
    CHIP_INVERSION:22,//specialCHIP
	CHIP_TELEPORTATION:22,//specialCHIP
    CHIP_RESURRECTION:22//specialCHIP
];

global toASCII =@
[   9 : '\t'
,   10 : '\n'
,   13 : '\n'
,   32 : ' '
,   33 : '!'
,   34 : '"'
,   35 : '#'
,   36 : '$'
,   37 : '%'
,   38 : '&'
,   39 : "'"
,   40 : '('
,   41 : ')'
,   42 : '*'
,   43 : '+'
,   44 : ','
,   45 : '-'
,   46 : '.'
,   47 : '/'
,   48 : '0'
,   49 : '1'
,   50 : '2'
,   51 : '3'
,   52 : '4'
,   53 : '5'
,   54 : '6'
,   55 : '7'
,   56 : '8'
,   57 : '9'
,   58 : ':'
,   59 : ''
,   60 : '<'
,   61 : '='
,   62 : '>'
,   63 : '?'
,   64 : '@'
,   65 : 'A'
,   66 : 'B'
,   67 : 'C'
,   68 : 'D'
,   69 : 'E'
,   70 : 'F'
,   71 : 'G'
,   72 : 'H'
,   73 : 'I'
,   74 : 'J'
,   75 : 'K'
,   76 : 'L'
,   77 : 'M'
,   78 : 'N'
,   79 : 'O'
,   80 : 'P'
,   81 : 'Q'
,   82 : 'R'
,   83 : 'S'
,   84 : 'T'
,   85 : 'U'
,   86 : 'V'
,   87 : 'W'
,   88 : 'X'
,   89 : 'Y'
,   90 : 'Z'
,   91 : '['
,   92 : '\\'
,   93 : ']'
,   94 : '^'
,   95 : '_'
,   96 : '`'
,   97 : 'a'
,   98 : 'b'
,   99 : 'c'
,   100 : 'd'
,   101 : 'e'
,   102 : 'f'
,   103 : 'g'
,   104 : 'h'
,   105 : 'i'
,   106 : 'j'
,   107 : 'k'
,   108 : 'l'
,   109 : 'm'
,   110 : 'n'
,   111 : 'o'
,   112 : 'p'
,   113 : 'q'
,   114 : 'r'
,   115 : 's'
,   116 : 't'
,   117 : 'u'
,   118 : 'v'
,   119 : 'w'
,   120 : 'x'
,   121 : 'y'
,   122 : 'z'
,   123 : '{'
,   124 : '|'
,   125 : '}'
,   126 : '~'
];

global toCode =@
[   '\t' : 9
,   '\n' : 13 
,   ' ' : 32 
,   '!' : 33 
,   '"' : 34 
,   '#' : 35 
,   '$' : 36 
,   '%' : 37 
,   '&' : 38 
,   "'" : 39 
,   '(' : 40 
,   ')' : 41 
,   '*' : 42 
,   '+' : 43 
,   ',' : 44 
,   '-' : 45 
,   '.' : 46 
,   '/' : 47 
,   '0' : 48 
,   '1' : 49 
,   '2' : 50 
,   '3' : 51 
,   '4' : 52 
,   '5' : 53 
,   '6' : 54 
,   '7' : 55 
,   '8' : 56 
,   '9' : 57 
,   ':' : 58 
,   '' : 59 
,   '<' : 60 
,   '=' : 61 
,   '>' : 62 
,   '?' : 63 
,   '@' : 64 
,   'A' : 65 
,   'B' : 66 
,   'C' : 67 
,   'D' : 68 
,   'E' : 69 
,   'F' : 70 
,   'G' : 71 
,   'H' : 72 
,   'I' : 73 
,   'J' : 74 
,   'K' : 75 
,   'L' : 76 
,   'M' : 77 
,   'N' : 78 
,   'O' : 79 
,   'P' : 80 
,   'Q' : 81 
,   'R' : 82 
,   'S' : 83 
,   'T' : 84 
,   'U' : 85 
,   'V' : 86 
,   'W' : 87 
,   'X' : 88 
,   'Y' : 89 
,   'Z' : 90 
,   '[' : 91 
,   '\\' : 92 
,   ']' : 93 
,   '^' : 94 
,   '_' : 95 
,   '`' : 96 
,   'a' : 97 
,   'b' : 98 
,   'c' : 99 
,   'd' : 100
,   'e' : 101
,   'f' : 102
,   'g' : 103
,   'h' : 104
,   'i' : 105
,   'j' : 106
,   'k' : 107
,   'l' : 108
,   'm' : 109
,   'n' : 110
,   'o' : 111
,   'p' : 112
,   'q' : 113
,   'r' : 114
,   's' : 115
,   't' :116
,   'u' :117
,   'v' :118
,   'w' :119
,   'x' :120
,   'y' :121
,   'z' :122
,   '{' :123
,   '|' :124
,   '}' :125
,   '~' :126
];