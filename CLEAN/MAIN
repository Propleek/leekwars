//include('000_COMPATIBILITY');
include('auto');
stopOpk("loading lib");

// charge les maps de chaque arme pour chaque adv
loadMapsDanger(8*1000*1000);
// génère la map complête de chaque adv à partir des maps d'armes.
finalizeMapsDanger();
// la map de tout le monde.
map_danger = getMapDanger([]);
colorMap();
//mes déplacements
reachableCells = getReachableCells([getCell():0], getMP(), []);
// préparation de la map des actions possibles
setMapActions();

global _MAINWEAPON = WEAPON_GRENADE_LAUNCHER;
// choix de la gravityCell
var gravityArray = [];
var ally = getFarthestAlly();
if(ally != null && ally != -1) gravityArray[getCell(ally)] = 2; // on se tient à 2 de l'ally le plus loin
else gravityArray[306] = 0;// ou proche du centre
if(getTurn()<45) gravityArray[getCell(getNearestEnemy())] = 8; // on se tient à 10 de l'adv
else gravityArray[getCell(getNearestEnemy())] = 4; // ou plus proche après le tour 45

// liste des combos à tester
var combos = jsonDecode(getRegister(getTP()));
// choix du set de combo en fonction de mon état
var comboz;
var weap = getWeapon();
if(weap==null){
	comboz = @combos["EMPTY"];
}else{
	comboz = @combos[string(weap)];
}
// test de toutes les combos si j'ai bien les cd
var finalCombos = [];
for(var name:var combo in comboz){
	var ok = true;
	for(var item in combo){
		if(_ITEM_HAVECD[item] && getCooldown(item)!=0){
			ok=false;
			break;
		}
	}
	if(ok) push(finalCombos, combo);
}

var best = findBestMove(finalCombos, gravityArray);
debug("BEST: "+ best);
playBestMove(best);
if(getWeapon()==null) setWeapon(_MAINWEAPON);

debug('TOTALOP:' + round(getOperations()/1000) +"k");

sayCupidon();
// pour avoir le cout de la lib à chaque tour proprement.
__debug_operation=0;
