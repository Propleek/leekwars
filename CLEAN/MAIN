//include('000_COMPATIBILITY');
include('auto');
stopOpk("loading lib");

if(getTurn()==1) _IS_SUMMONER = true;

startOp();
loadMapsDanger(_OPERATION_MAP_DANGER);
stopOpkW("map_danger");

//map_danger = getMapDanger([]);
//colorMap();

reachableCells = getReachableCells([getCell():0], getMP(), []);
updateCoef(null);
startOp();
setMapActions();
stopOpkW("SETMAPACTION");

global _MAINWEAPON = WEAPON_M_LASER;
// choix de la gravityCell
var gravityArray = [];
var ally = getFarthestAlly();
if(ally != null && ally != -1 && getTurn()<45) gravityArray[getCell(ally)] = 3; // on se tient à 2 de l'ally le plus loin
else gravityArray[306] = 0;// ou proche du centre
gravityArray[getCell(getNearestEnemy())] = 8; // on se tient à 15 de l'adv

// liste des combos à tester
var cnt = 0;
var reg;
var strCombos = "";
do{
	reg = getRegister(getTP()+"-"+cnt);
	if(reg!=null) strCombos+=reg;
	cnt++;
}while(reg != null);

var combos = jsonDecode(strCombos);
// choix du set de combo en fonction de mon état
var comboz;
var weap = getWeapon();
if(weap==null) comboz = @combos["EMPTY"];
else comboz = @combos[string(weap)];

playBestMove(findBestMove(comboz, gravityArray));
if(getWeapon()==null) setWeapon(_MAINWEAPON);

debugW('TOTALOP:' + round(getOperations()/1000) +"k");

sayCupidon();
displayBench();

// pour avoir le cout de la lib à chaque tour proprement.
__debug_operation=0;