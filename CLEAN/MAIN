include('000_COMPATIBILITY');
include('auto');
stopOpk("loading lib");

// charge les maps de chaque arme pour chaque adv
loadMapsDanger(10*1000*1000);
// génère la map complête de chaque adv à partir des maps d'armes.
finalizeMapsDanger();
// la map de tout le monde.
map_danger = getMapDanger([]);
colorMap();

//mes déplacements
reachableCells = getReachableCells([getCell():0], getMP(), []);

// préparation de la map des actions possibles
setMapActions();


// liste des combos à tester
var combos = [
WEAPON_MAGNUM: [
    [WEAPON_MAGNUM, WEAPON_MAGNUM]
    ,[CHIP_PROTEIN, WEAPON_MAGNUM, CHIP_BANDAGE]
    ,[CHIP_SPARK, WEAPON_MAGNUM, CHIP_BANDAGE]
    ,[CHIP_HELMET, WEAPON_MAGNUM, CHIP_BANDAGE]
    ,[CHIP_WALL, WEAPON_MAGNUM, CHIP_BANDAGE]
    ,[WEAPON_MAGNUM, CHIP_CURE]
    ,[CHIP_SHIELD, WEAPON_MAGNUM]
    ,[WEAPON_BROADSWORD, CHIP_BANDAGE]
    ,[WEAPON_BROADSWORD, CHIP_CURE]
    ,[CHIP_PROTEIN, WEAPON_BROADSWORD]
    ,[CHIP_SPARK, WEAPON_BROADSWORD]
    ,[CHIP_SHIELD, WEAPON_BROADSWORD]
    ,[CHIP_HELMET, WEAPON_BROADSWORD]
    ,[CHIP_WALL, WEAPON_BROADSWORD]
    ,[CHIP_PROTEIN, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_SPARK, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_SHIELD, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_HELMET, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_WALL, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_PROTEIN, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_PROTEIN, CHIP_SHIELD, CHIP_BANDAGE]
    ,[CHIP_PROTEIN, CHIP_HELMET, CHIP_BANDAGE]
    ,[CHIP_PROTEIN, CHIP_WALL, CHIP_BANDAGE]
    ,[CHIP_SPARK, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_SHIELD, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_HELMET, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_WALL, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_SHIELD, CHIP_HELMET, CHIP_BANDAGE]
    ,[CHIP_SHIELD, CHIP_WALL, CHIP_BANDAGE]
    ,[CHIP_HELMET, CHIP_WALL, CHIP_BANDAGE]
    ,[CHIP_PROTEIN, CHIP_SPARK, CHIP_CURE]
    ,[CHIP_PROTEIN, CHIP_HELMET, CHIP_CURE]
    ,[CHIP_PROTEIN, CHIP_WALL, CHIP_CURE]
    ,[CHIP_SPARK, CHIP_SPARK, CHIP_CURE]
    ,[CHIP_HELMET, CHIP_SPARK, CHIP_CURE]
    ,[CHIP_WALL, CHIP_SPARK, CHIP_CURE]
    ,[CHIP_HELMET, CHIP_WALL, CHIP_CURE]
    ,[CHIP_PROTEIN, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_PROTEIN, CHIP_SHIELD, CHIP_SPARK]
    ,[CHIP_PROTEIN, CHIP_HELMET, CHIP_SPARK]
    ,[CHIP_PROTEIN, CHIP_WALL, CHIP_SPARK]
    ,[CHIP_PROTEIN, CHIP_SHIELD, CHIP_HELMET]
    ,[CHIP_PROTEIN, CHIP_SHIELD, CHIP_WALL]
    ,[CHIP_PROTEIN, CHIP_HELMET, CHIP_WALL]
    ,[CHIP_SPARK, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_SHIELD, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_HELMET, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_WALL, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_SHIELD, CHIP_HELMET, CHIP_SPARK]
    ,[CHIP_SHIELD, CHIP_WALL, CHIP_SPARK]
    ,[CHIP_HELMET, CHIP_WALL, CHIP_SPARK]
    ,[CHIP_SHIELD, CHIP_HELMET, CHIP_WALL]
],WEAPON_BROADSWORD: [
    [WEAPON_MAGNUM, CHIP_BANDAGE]
    ,[WEAPON_MAGNUM, CHIP_CURE]
    ,[CHIP_PROTEIN, WEAPON_MAGNUM]
    ,[CHIP_SPARK, WEAPON_MAGNUM]
    ,[CHIP_SHIELD, WEAPON_MAGNUM]
    ,[CHIP_HELMET, WEAPON_MAGNUM]
    ,[CHIP_WALL, WEAPON_MAGNUM]
    ,[WEAPON_BROADSWORD, WEAPON_BROADSWORD]
    ,[CHIP_PROTEIN, WEAPON_BROADSWORD, CHIP_BANDAGE]
    ,[CHIP_SPARK, WEAPON_BROADSWORD, CHIP_BANDAGE]
    ,[CHIP_HELMET, WEAPON_BROADSWORD, CHIP_BANDAGE]
    ,[CHIP_WALL, WEAPON_BROADSWORD, CHIP_BANDAGE]
    ,[WEAPON_BROADSWORD, CHIP_CURE]
    ,[CHIP_SHIELD, WEAPON_BROADSWORD]
    ,[CHIP_PROTEIN, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_SPARK, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_SHIELD, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_HELMET, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_WALL, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_PROTEIN, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_PROTEIN, CHIP_SHIELD, CHIP_BANDAGE]
    ,[CHIP_PROTEIN, CHIP_HELMET, CHIP_BANDAGE]
    ,[CHIP_PROTEIN, CHIP_WALL, CHIP_BANDAGE]
    ,[CHIP_SPARK, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_SHIELD, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_HELMET, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_WALL, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_SHIELD, CHIP_HELMET, CHIP_BANDAGE]
    ,[CHIP_SHIELD, CHIP_WALL, CHIP_BANDAGE]
    ,[CHIP_HELMET, CHIP_WALL, CHIP_BANDAGE]
    ,[CHIP_PROTEIN, CHIP_SPARK, CHIP_CURE]
    ,[CHIP_PROTEIN, CHIP_HELMET, CHIP_CURE]
    ,[CHIP_PROTEIN, CHIP_WALL, CHIP_CURE]
    ,[CHIP_SPARK, CHIP_SPARK, CHIP_CURE]
    ,[CHIP_HELMET, CHIP_SPARK, CHIP_CURE]
    ,[CHIP_WALL, CHIP_SPARK, CHIP_CURE]
    ,[CHIP_HELMET, CHIP_WALL, CHIP_CURE]
    ,[CHIP_PROTEIN, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_PROTEIN, CHIP_SHIELD, CHIP_SPARK]
    ,[CHIP_PROTEIN, CHIP_HELMET, CHIP_SPARK]
    ,[CHIP_PROTEIN, CHIP_WALL, CHIP_SPARK]
    ,[CHIP_PROTEIN, CHIP_SHIELD, CHIP_HELMET]
    ,[CHIP_PROTEIN, CHIP_SHIELD, CHIP_WALL]
    ,[CHIP_PROTEIN, CHIP_HELMET, CHIP_WALL]
    ,[CHIP_SPARK, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_SHIELD, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_HELMET, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_WALL, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_SHIELD, CHIP_HELMET, CHIP_SPARK]
    ,[CHIP_SHIELD, CHIP_WALL, CHIP_SPARK]
    ,[CHIP_HELMET, CHIP_WALL, CHIP_SPARK]
    ,[CHIP_SHIELD, CHIP_HELMET, CHIP_WALL]
],'EMPTY': [
    [WEAPON_MAGNUM, CHIP_BANDAGE]
    ,[WEAPON_MAGNUM, CHIP_CURE]
    ,[CHIP_PROTEIN, WEAPON_MAGNUM]
    ,[CHIP_SPARK, WEAPON_MAGNUM]
    ,[CHIP_SHIELD, WEAPON_MAGNUM]
    ,[CHIP_HELMET, WEAPON_MAGNUM]
    ,[CHIP_WALL, WEAPON_MAGNUM]
    ,[WEAPON_BROADSWORD, CHIP_BANDAGE]
    ,[WEAPON_BROADSWORD, CHIP_CURE]
    ,[CHIP_PROTEIN, WEAPON_BROADSWORD]
    ,[CHIP_SPARK, WEAPON_BROADSWORD]
    ,[CHIP_SHIELD, WEAPON_BROADSWORD]
    ,[CHIP_HELMET, WEAPON_BROADSWORD]
    ,[CHIP_WALL, WEAPON_BROADSWORD]
    ,[CHIP_PROTEIN, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_SPARK, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_SHIELD, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_HELMET, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_WALL, CHIP_BANDAGE, CHIP_CURE]
    ,[CHIP_PROTEIN, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_PROTEIN, CHIP_SHIELD, CHIP_BANDAGE]
    ,[CHIP_PROTEIN, CHIP_HELMET, CHIP_BANDAGE]
    ,[CHIP_PROTEIN, CHIP_WALL, CHIP_BANDAGE]
    ,[CHIP_SPARK, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_SHIELD, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_HELMET, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_WALL, CHIP_SPARK, CHIP_BANDAGE]
    ,[CHIP_SHIELD, CHIP_HELMET, CHIP_BANDAGE]
    ,[CHIP_SHIELD, CHIP_WALL, CHIP_BANDAGE]
    ,[CHIP_HELMET, CHIP_WALL, CHIP_BANDAGE]
    ,[CHIP_PROTEIN, CHIP_SPARK, CHIP_CURE]
    ,[CHIP_PROTEIN, CHIP_HELMET, CHIP_CURE]
    ,[CHIP_PROTEIN, CHIP_WALL, CHIP_CURE]
    ,[CHIP_SPARK, CHIP_SPARK, CHIP_CURE]
    ,[CHIP_HELMET, CHIP_SPARK, CHIP_CURE]
    ,[CHIP_WALL, CHIP_SPARK, CHIP_CURE]
    ,[CHIP_HELMET, CHIP_WALL, CHIP_CURE]
    ,[CHIP_PROTEIN, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_PROTEIN, CHIP_SHIELD, CHIP_SPARK]
    ,[CHIP_PROTEIN, CHIP_HELMET, CHIP_SPARK]
    ,[CHIP_PROTEIN, CHIP_WALL, CHIP_SPARK]
    ,[CHIP_PROTEIN, CHIP_SHIELD, CHIP_HELMET]
    ,[CHIP_PROTEIN, CHIP_SHIELD, CHIP_WALL]
    ,[CHIP_PROTEIN, CHIP_HELMET, CHIP_WALL]
    ,[CHIP_SPARK, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_SHIELD, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_HELMET, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_WALL, CHIP_SPARK, CHIP_SPARK]
    ,[CHIP_SHIELD, CHIP_HELMET, CHIP_SPARK]
    ,[CHIP_SHIELD, CHIP_WALL, CHIP_SPARK]
    ,[CHIP_HELMET, CHIP_WALL, CHIP_SPARK]
    ,[CHIP_SHIELD, CHIP_HELMET, CHIP_WALL]
]];

var best, score, comboz;
// choix du set de combo en fonction de mon état
var weap = getWeapon();
if(weap==null){
	comboz = combos["EMPTY"];
}else{
	comboz = combos[weap];
}

var pathDistToSafeCell = getPathDistToClosestSafeCellFromCenter();
// test de toutes les combos si j'ai bien les cd
for(var name:var combo in comboz){
	var cntinue = false;
	for(var item in combo){
		if(_ITEM_HAVECD[item] && getCooldown(item)!=0){
			cntinue=true;
			break;
		}
	}
	if(cntinue) continue;
	var tmp = findBestMove(combo, pathDistToSafeCell);
	//debug("BEST for "+name+": " + tmp["score"]);
	if(best==null || best["score"] < tmp["score"]){
		best = tmp;
	}
}
debug("BEST: "+ best);
if(best!=null){
	for(var action in best["actions"]){
		debug(_ITEMID_TOSTRING[action["item"]] + ": " + action);
	}
	playBestMove(best);
}
else {
	debugW("MOVETOWARD");	
	if(getTurn()<32) moveTowardCell(getSafestCell());
	else moveToward(getNearestEnemy());
}

function launchForAllAlly(chip){
	if(inArray(getChips(),chip)){
		for(var a in getAliveAllies()) if(!isSummon(a) && a!=getLeek()) useChip(chip, a);
		useChip(chip, getLeek());
	}
}
function buff(){
	launchForAllAlly(CHIP_SHIELD);
	launchForAllAlly(CHIP_HELMET);
	if(getLife()<getTotalLife())launchForAllAlly(CHIP_CURE);
	if(getLife()<getTotalLife())launchForAllAlly(CHIP_BANDAGE);
	launchForAllAlly(CHIP_STRETCHING);
	launchForAllAlly(CHIP_PROTEIN);
	while(useChip(CHIP_SPARK, getNearestEnemy())>0);
	if(getWeapon()==null) setWeapon(WEAPON_MAGNUM);
}
buff();

debug('TOTALOP:' + round(getOperations()/1000) +"k");

// pour avoir le cout de la lib à chaque tour proprement.
__debug_operation=0;
