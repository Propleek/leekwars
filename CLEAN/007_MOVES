include('auto');

/**
 * Retourne la cellule la plus sure parmis les cellules accessibles
 *
 * @return int Cellule la plus sure
 */
function getSafestCell(){
	var minDanger = 1000000;
	var safestCell = getCell();
	for(var cell: var dist in reachableCells){
		var danger = @map_danger[cell];
		if(danger < minDanger){
			minDanger = danger;
			safestCell = cell;
		}
		else if(danger == minDanger && getDistance(cell, 306) < getDistance(safestCell, 306)){
			minDanger = danger;
			safestCell = cell;
		}
	}
	
	return safestCell;
}

function getPathDistToClosestSafeCellFromCenter(){
	var minDanger = 1000000, myCell = getCell();
	var distFromMe = getReachableCells([myCell:0], 100, []);
	var safestCell = getCell();
	for(var cell: var danger in map_danger){
		if(distFromMe[cell] == null) continue;
		var tmpDanger = danger + getCellDistance(cell, 306) + distFromMe[cell];
		if(tmpDanger < minDanger){
			minDanger = tmpDanger;
			safestCell = cell;
		}
	}
	mark(safestCell, COLOR_BLUE);//todo delete
	return @getReachableCells([safestCell:0], 100, [getCell()]);
}
