include('auto');

// init turn 1
if(getTurn()==1){
	// TODO version avec lineOfSight(cell, cell)==false pour un osbtacle
	for(var obs in getObstacles()){
		_OBSTACLES[obs] = true;
	}
	for(var i=0;i<613;i++){
		_areaCells1[i] = prepareCellArea(i, AREA_CIRCLE_1);
		_areaCells2[i] = prepareCellArea(i, AREA_CIRCLE_2);
		_areaCells3[i] = prepareCellArea(i, AREA_CIRCLE_3);
	}
	for(var i=0;i<150;i++){ // reminder: idmax à 110 @janvier2016
		if(isWeapon(i)){
			_ITEM_ISWEAP[i]=true;
			_ITEM_HAVECD[i]=false;
			if(i==WEAPON_GAZOR) _ITEM_MINRANGE[i]=4; // on se tire pas dessus !
			else _ITEM_MINRANGE[i]=getWeaponMinRange(i);
			_ITEM_MAXRANGE[i]=getWeaponMaxRange(i);
			_ITEM_INLINE[i]=isInlineWeapon(i);
			_ITEM_NEEDLOS[i]=weaponNeedLos(i);
			_ITEM_COST[i]=getWeaponCost(i);
			_ITEM_AREA[i]=getWeaponArea(i);
			_ITEM_EFFECTS[i]=getWeaponEffects(i);
		}else if(isChip(i)){
			_ITEM_ISWEAP[i]=false;
			_ITEM_HAVECD[i]= getChipCooldown(i)!=0;
			if(i==CHIP_PLAGUE) _ITEM_MINRANGE[i]=4; // on se tire pas dessus !
			else if(i==CHIP_TOXIN) _ITEM_MINRANGE[i]=2;
			else if(i==CHIP_SOPORIFIC) _ITEM_MINRANGE[i]=3;
			else if(i==CHIP_BALL_AND_CHAIN) _ITEM_MINRANGE[i]=3;
			else _ITEM_MINRANGE[i]=getChipMinRange(i);
			_ITEM_MAXRANGE[i]=getChipMaxRange(i);
			_ITEM_INLINE[i]=isInlineChip(i);
			_ITEM_NEEDLOS[i]=chipNeedLos(i);
			_ITEM_COST[i]=getChipCost(i);
			_ITEM_AREA[i]=getChipArea(i);
			_ITEM_EFFECTS[i]=getChipEffects(i);
		}
	}
}
//init every turn
// refresh alive allies/enemies
_ALIVE_ALLIES = getAliveAllies();
_ALIVE_ENEMIES = getAliveEnemies();

_LEEKS_CELL=[];
for(var leek in _ALIVE_ALLIES+_ALIVE_ENEMIES){
	if(_SELF!=leek) _LEEKS_CELL[getCell(leek)] = leek;
}

_SCN_STR_100 = false;
_SCN_STR_200 = false;
_SCN_STR_300 = false;
for(var e in _ALIVE_ENEMIES){
	if(getStrength(e)>=100) _SCN_STR_100 = true;
	if(getStrength(e)>=200) _SCN_STR_200 = true;
	if(getStrength(e)>=300) _SCN_STR_300 = true;
}

// a uncomment si t'utilise getCellToUseWeapChipOnCell pour avoir la plus proche en terme de path
_SELF_FULLMAP_PATH_DIST=[];
_SELF_FULLMAP_PATH_DIST=getReachableCells([getCell():0], 100, []);

// init de l'état des leeks
_LEEKS=[];
var lvl = getLevel(), isLvl10 = lvl>=10, isLvl38 = lvl>=38, isLvl61 = lvl>=61;
for(var leek in _ALIVE_ALLIES+_ALIVE_ENEMIES){
	var effects = [], psnDmgTurn = 0, psnDmgTotal = 0;
	if(isLvl61){
		for(var e in getEffects(leek)){
			// [type, value, caster_id, turns, critical, item_id, target_id]
			var type = e[0],
			item = e[5],
			value = e[1],
			duration = e[3];
			if(type==EFFECT_POISON){
				psnDmgTurn += value;
				psnDmgTotal += value*duration;
			}else if(type==EFFECT_HEAL){
				psnDmgTurn -= value;
				psnDmgTotal -= value*duration;
			}else{
				effects[item] = value*duration;
			}
		}
	}else{
		for(var castor in _ALIVE_ALLIES+_ALIVE_ENEMIES){
			for(var e in getLaunchedEffects(castor)){
				if(e[6]==leek){
					var type = e[0],
					item = e[5],
					value = e[1],
					duration = e[3];
					if(type==EFFECT_POISON){
						psnDmgTurn += value;
						psnDmgTotal += value*duration;
					}else if(type==EFFECT_HEAL){
						psnDmgTurn -= value;
						psnDmgTotal -= value*duration;
					}else{
						effects[item] = value*duration;
					}
				}
			}
		}
	}
	var leekInfo = [
		"totallife": getTotalLife(leek)
		,"life": getLife(leek)
		,"psnlife": getLife(leek)-psnDmgTurn
		,"psnTurn": psnDmgTurn
		,"psnTotal": psnDmgTotal
		,"effects": @effects
		,"str": getStrength(leek)
		,"mgc": getMagic(leek)
		,"wsd": getWisdom(leek)
		,"rst": getResistance(leek)
		,"agi": getAgility(leek)
		,"snc": getScience(leek)
		,"tp": isLvl10 ? getTP(leek) : 10
		,"mp": isLvl10 ? getMP(leek) : 3
		,"relShield": isLvl38 ? getRelativeShield(leek) : getRelativeByLaunchedEffects(leek)
		,"absShield": isLvl38 ? getAbsoluteShield(leek) : getAbsoluteByLaunchedEffects(leek)
		,"dmgReturn": getDamageReturn(leek)
		,'finalMap': null
	];
	_LEEKS[leek] = @leekInfo;
}
