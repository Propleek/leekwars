DOCUMENTATION GLOBALES


Globales du fichier 001_GLOBAL

Informations sur les poireaux

_SELF  = getLeek();
_LEEKS =
[
	leekId : [
		"totallife" : getTotalLife(leekId)
		,"life" : getLife(leekId)
		,"psnlife": getLife(leekId)
        ,"str": getStrength(leekId)
        ,"mgc": getMagic(leekId)
        ,"wsd": getWisdom(leekId)
        ,"rst": getResistance(leekId)
        ,"agi": getAgility(leekId)
        ,"snc": getScience(leekId)
        ,"tp": getTP(leekId)
        ,"mp": getMP(leekId)
        ,"relShield": getRelativeShield(leekId)
        ,"absShield": getAbsoluteShield(leekId)
        ,"dmgReturn": getDamageReturn(leekId)
        ,"items": getOrderedWeapChipScore() (n'est refresh qu'à l'appel de loadMapsDanger)
        ,'finalMap': null
	]
]



Informations sur la map

reachableCells          ==> Celulles accessibles pour le poireau                [cell:mp]
map_danger              ==> Map de danger complète                              [cell:danger]
map_leek_danger         ==> Map de danger de chaque poireau                     [leek:map_danger]
map_leek_weap_danger    ==> Map de danger de l'arme pour le poireau             [leek:[weapon:[map_danger]]
map_actions             ==> Map des actions possibles                           [
                                                                                    "id":w
                                                                                    ,"from":fromCell
                                                                                    ,"to":toCell,
                                                                                    ,"targets":targets
                                                                                ]

_OBSTACLES              ==> Tableau des obstacles                               [cell:true]

_LEEKS_CELL             ==> ID des cell des leek (sauf celui qui joue)          [leek:cell]

_SELF_FULLMAP_PATH_DIST ==> ???

_areaCells1             ==> Tableau des AREA_CIRCLE_1                           [cell:[cell1,cell2,...]]
_areaCells2             ==> Tableau des AREA_CIRCLE_2                           [cell:[cell1,cell2,...]]
_areaCells3             ==> Tableau des AREA_CIRCLE_3                           [cell:[cell1,cell2,...]]




Informations sur les stuffs

_ITEM_ISWEAP            ==> True si l'item est une arme, false sinon            [item:isWeapon]
_ITEM_MINRANGE          ==> La portée minimale de l'item                        [item:minRange]
_ITEM_MAXRANGE          ==> La portée maximale de l'item                        [item:maxRange]
_ITEM_INLINE            ==> True si l'item est en ligne, false sinon            [item:isInline]
_ITEM_NEEDLOS           ==> True si l'item need une LOS, false sinon            [item:needLos]
_ITEM_COST              ==> Le cout en TP de l'item                             [item:itemCost]
_ITEM_AREA              ==> La zone d'effet de l'item (AREA_POINT, LAZER,...)   [item:itemArea]
_ITEM_EFFECTS           ==> Les effets de l'item (équivalent à getEffects)      [item:[
                                                                                    effect:[
                                                                                        type,
                                                                                        min,
                                                                                        max,
                                                                                        turns,
                                                                                        targets
                                                                                    ]
                                                                                ]
_ITEM_HAVECD            ==> Si l'item a un CD (booleen ou valeur du CD ?)       [item:haveCD]



Informations diverses

ENTITY_LEEK             ==> Valeur de l'entité Leek                             0
ENTITY_PUNY_BULB        ==> Valeur de l'entité PunyBulb                         1
ENTITY_ROCKY_BULB       ==> Valeur de l'entité RockyBulb                        2
ENTITY_ICED_BULB        ==> Valeur de l'entité IcedBulb                         3
ENTITY_HEALER_BULB      ==> Valeur de l'entité HealerBulb                       4
ENTITY_METALLIC_BULB    ==> Valeur de l'entité MetallicBulb                     5
ENTITY_FIRE_BULB        ==> Valeur de l'entité FireBulb                         6
ENTITY_LIGHTNING_BULB   ==> Valeur de l'entité LightningBulb                    7

_CHIP_ISPOSITIV         ==> True si la puce est un boost/heal, false sinon      [chip:isPositiv]

_CHIP_ISSPECIAL         ==> Est spéciale une puce d'invo, de TP, resu, ...      [specialChip:true]

_ITEMID_TOSTRING	==> Association entre l'item et sa constante string	[itemId:itemName]
_ITEM_PRIORITY		==> Priorité d'utilisation des items dans un combo	[itemId:priority]



Ajout Roshyo pour les sumonners :

__PUNYBULBS             ==> Tableau des PunyBulbs alliés en jeu                 [bulbIb]
__ROCKYBULBS            ==> Tableau des RockyBulbs alliés en jeu                [bulbId]
__ICEDBULBS             ==> Tableau des IcedBulbs alliés en jeu                 [bulbId]
__HEALERBULBS           ==> Tableau des HealerBulbs alliés en jeu               [bulbId]
__FIREBULBS             ==> Tableau des FireBulbs alliés en jeu                 [bulbId]
__METALLICBULBS         ==> Tableau des MetallicBulbs alliés en jeu             [bulbId]
__LIGHTNINGBULBS        ==> Tableau des LightningBulbs alliés en jeu            [bulbId]

summoningChips          ==> Tableau contenant les informations pour se servir
                            Des puces d'invocation                              [
                                                                                    'puny':[
                                                                                        'bulb' : CHIP_PUNY_BULB
                                                                                        ,'ai' : bulbAI
                                                                                    ]
                                                                                    ,'rocky':[
                                                                                        'bulb' : CHIP_ROCKY_BULB
                                                                                        ,'ai' : bulbAI
                                                                                    ]
                                                                                    ,etc...
                                                                                ]


Globales du fichier 006_COMBOS :

_LEEKS_COEF             ==> Tableau des coefficients des leeks/bulbes sur
                            le plateau                                          [entity:coef]
self_action_array       ==> ??
assoc_weap_from         ==> ??
assoc_from_item_actions ==> ??
